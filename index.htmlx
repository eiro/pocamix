use XML::Tag::html5;
use strict;
use warnings qw( FATAL );

'<!DOCTYPE html>', html {
    head
    { ( meta_ qw( charset utf-8 ))
    , ( http_equiv qw( x-ua-compatible ie=edge ))
    , ( meta_content viewport => 
        "width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1"  )
    , (map import_css, qw( 
            ./unsemantic.css
            ./theme.css
            http://fonts.googleapis.com/css?family=Orbitron))
    , title { "homepages are useless" }
    },

    body {
        my ( $items, $dl );

        $items = sub {
            my ( $k, $v ) = @{ $_[0] };
            dt {$k}
            , dd {
                my $ref = ref $v;
                if    ( $ref eq 'ARRAY' ) { $dl->( $v ) }
                elsif ( $ref eq 'HASH' ) {
                    link_to $$v{href}
                    , ( $$v{alt} ||
                        $$v{href} ||
                        die
                    )
                }
                else { die "unexpected $ref" }
            }
        }; 

        $dl = sub {
            my ( $dl ) = @_;
            dl { map $items->( $_ ), @$dl }
        };

        my $menu = 
        [ [ admin => 
              [ [ configurer =>
                      [ ["diffusion/réception" => {href=>"/", alt=>"alt" }]
                      , ["définition" => {href => "/"}]]]]]
        , [ admin2 => 
              [ [ configurer =>
                      [ ["diffusion/réception" => {href=>"/", alt=>"alt" }]
                      , ["définition" => {href => "/"}]]]]]
          ];

        div { +{qw( id menu )},  $dl->( $menu ) }, 
        div { +{qw( id main )},
            span { +{qw( id menuButton )}, "(M)" },

            form
            { br_ , (label {+{ class => "haha" }, "this bollocks X " }), (input_check qw( foo pouet class tata checked checked ) ),
            , br_ , (label {+{ class => "haha" }, "this bollocks A " }), (input_check qw( foo pouet class bar) ),
            , br_ , (label {+{ class => "haha" }, "this bollocks Z " }), (input_check qw( foo pouet checked checked ), class => "tata haha" ),
            , br_ , (label {+{ class => "haha" }, "this bollocks" }), (input_check qw( foo pouet class bang) )
            , (input_button qw( doWhatMean ))
            , (input_submit "vtff")
            }, 

        },

        map import_js, qw(
            http://www.preludels.com/prelude-browser-min.js
            https://rawgithub.com/dmauro/Keypress/master/keypress.js
            behave.js
        )
    }
}
